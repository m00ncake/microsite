{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('ezlight/pricing-table-v2') }}
{{ attach_library('custom_gtm_ga/featurepricing') }}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'pricing v2 active'
]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      {{ content.contextual_links }}
      <div class="pricing__button-toggle row no-gutters d-flex align-items-center justify-content-center text-center">
        <div class="col d-flex justify-content-end">
          <span class="annually">{{ 'Annual Plans'|t }}<br><span class="fw-800 text-primary">{{ 'SAVE 20%'|t }}</span></span>
        </div>
        <div class="col-auto">
          <button type="button" class="btn btn-toggle" data-toggle="button" aria-pressed="false"></button>
        </div>
        <div class="col d-flex justify-content-start">
          <span class="monthly">{{ 'Monthly<br>Plans'|t }}</span>
        </div>
      </div>
      <div class="pricing-items">
        {{ content.field_pricing_table_item }}
      </div>
      {# <button id="desktop-collapse-btn" class="btn btn-link d-none d-xl-block fw-700 text-white bg-primary mx-auto" type="button" data-toggle="collapse" data-target=".pricing-item__additional-features-container"
              aria-expanded="false" aria-controls="pricing-item__additional-features-container">
        <span class="show-features">{{ '+ Expand All Features'|t }}</span>
        <span class="hide-features">{{ 'Collapse All Features'|t }}</span>
      </button> #}
    {% endblock %}
  </div>
{% endblock paragraph %}
